-- Haskellでは多引数の関数はカリー化された状態で定義される
-- カリー化：多引数の関数を関数を返す関数として表現する事

-- 糖衣構文を使った場合う
add = \x y -> x + y :: Int

-- 糖衣構文を使わない場合
-- 引数 x に対してラムダ式 \n -> m + n を返り値とする関数。
-- この定義に従えば、関数呼び出しに2のみを渡すと\x -> 2 + y という関数になる。
-- さらに、この関数に20を適応して、最終的に22が返ってくる。
add' = \x -> (\y -> x + y :: Int)

-- カリー化の部分適応
incr = add' 1

main = do
 print (add' 2 20)
 print (incr 10)